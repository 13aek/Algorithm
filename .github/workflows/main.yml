name: Sync selected problems to study repo

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sync-selected:
    runs-on: ubuntu-latest

    steps:
      - name: Check out personal repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set git identity
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Clone study repo
        env:
          STUDY_PAT: ${{ secrets.STUDY_PAT }}
        run: |
          git clone --depth=1 "https://x-access-token:${STUDY_PAT}@github.com/13aek/algostudy.git"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Build changed-file list
        run: |
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          if [ -z "$BEFORE" ] || [ "$BEFORE" = "0000000000000000000000000000000000000000" ]; then
            git diff --name-only HEAD~20 > changed_files.txt || true
          else
            git diff --name-only "$BEFORE" "$AFTER" > changed_files.txt || true
          fi
          echo "Changed files:"; cat changed_files.txt || true

      - name: Filter & sync ONLY allowlisted problems
        run: |
          python << 'PY'
          import os, re, shutil, yaml, pathlib, sys

          study_repo = "algostudy"
          allow_path = os.path.join(study_repo, "_config", "study-allowlist.yml")
          actor = os.environ.get("GITHUB_ACTOR", "")
          dest_root = os.path.join(study_repo, "members", actor)

          # allowlist 읽기
          with open(allow_path, "r", encoding="utf-8") as f:
            allow = yaml.safe_load(f) or {}
          plat = allow.get("platforms", {}) or {}
          allow_boj  = set(map(str, plat.get("boj",  [])))
          allow_swea = set(map(str, plat.get("swea", [])))

          # 변경 파일 목록
          try:
            with open("changed_files.txt", "r", encoding="utf-8") as f:
              changed = [line.strip() for line in f if line.strip()]
          except FileNotFoundError:
            changed = []

          # 숫자 토큰(2~6자리) 추출 → allowlist 숫자와 교집합 여부로 판정
          num_token = re.compile(r'(?<!\\d)(\\d{2,6})(?!\\d)')

          def has_allow_number(path):
            nums = set(num_token.findall(path))
            return bool(nums & allow_boj) or bool(nums & allow_swea)

          selected = [p for p in changed if os.path.isfile(p) and has_allow_number(p)]
          print("Selected files:", *selected, sep="\\n")

          if not selected:
            sys.exit(0)

          pathlib.Path(dest_root).mkdir(parents=True, exist_ok=True)
          for src in selected:
            dst = os.path.join(dest_root, src)
            os.makedirs(os.path.dirname(dst), exist_ok=True)
            shutil.copy2(src, dst)
          PY

      - name: Commit & Push to study repo (master)
        working-directory: algostudy
        run: |
          git checkout -B master
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "sync(selected): ${{ github.actor }} from ${{ github.repository }}@${GITHUB_SHA::7}"
            git push origin master
          else
            echo "No selected changes to sync."
          fi
